name: Deploy

on:
  push:
    branches:
      - master

permissions:
  actions: read
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.get-projects.outputs.projects }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Replace environment variables
        run: |
          sed -i "s/\$VITE_FIREBASE_API_KEY/${{ vars.VITE_FIREBASE_API_KEY }}/g" apps/admin-panel/src/app/core/environments/environment.prod.ts
          sed -i "s/\$VITE_FIREBASE_APP_ID/${{ vars.VITE_FIREBASE_APP_ID }}/g" apps/admin-panel/src/app/core/environments/environment.prod.ts
          sed -i "s/\$VITE_FIREBASE_AUTH_DOMAIN/${{ vars.VITE_FIREBASE_AUTH_DOMAIN }}/g" apps/admin-panel/src/app/core/environments/environment.prod.ts
          sed -i "s/\$VITE_FIREBASE_MEASUREMENT_ID/${{ vars.VITE_FIREBASE_MEASUREMENT_ID }}/g" apps/admin-panel/src/app/core/environments/environment.prod.ts
          sed -i "s/\$VITE_FIREBASE_MESSAGING_SENDER_ID/${{ vars.VITE_FIREBASE_MESSAGING_SENDER_ID }}/g" apps/admin-panel/src/app/core/environments/environment.prod.ts
          sed -i "s/\$VITE_FIREBASE_PROJECT_ID/${{ vars.VITE_FIREBASE_PROJECT_ID }}/g" apps/admin-panel/src/app/core/environments/environment.prod.ts
          sed -i "s/\$VITE_FIREBASE_STORAGE_BUCKET/${{ vars.VITE_FIREBASE_STORAGE_BUCKET }}/g" apps/admin-panel/src/app/core/environments/environment.prod.ts
          sed -i "s/\$VITE_RECAPTCHA_V3_SITE_KEY/${{ vars.VITE_RECAPTCHA_V3_SITE_KEY }}/g" apps/admin-panel/src/app/core/environments/environment.prod.ts

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Set Nx shas
        uses: nrwl/nx-set-shas@v4

      - name: Run affected tasks
        run: npx nx affected -t build --exclude="*-e2e,landing-page"

      - name: Compress build output
        run: npx gzipper c dist
        if: success()

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 1
        if: success()

      # Nx Cloud recommends fixes for failures to help you get CI green faster. Learn more: https://nx.dev/ci/features/self-healing-ci
      - name: Fix CI
        run: npx nx fix-ci
        if: always()

      - name: Get affected projects
        id: get-projects
        run: |
          PROJECTS=$(npx nx show projects --affected --exclude="*-e2e" | tr '\n' ',' | sed 's/,$//')
          PROJECTS_JSON="[\"$(echo $PROJECTS | sed 's/,/","/g')\"]"
          echo "projects=$PROJECTS_JSON" >> $GITHUB_OUTPUT
          echo "Affected projects: $PROJECTS"
        if: success()

  deploy:
    name: Deploy to Cloudflare
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      deployments: write
    needs: build
    strategy:
      matrix:
        project: ${{ fromJson(needs.build.outputs.projects) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
        if: matrix.project == 'landing-page'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        if: matrix.project == 'landing-page'

      - name: Download pre-built artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-artifacts
          path: dist/
        if: matrix.project != 'landing-page'

      - name: Deploy static app
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist/apps/${{ matrix.project }}/browser --project-name=${{ matrix.project }}-imdat-dev
        if: matrix.project != 'landing-page'

      - name: Build and deploy landing-page
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npx nx deploy landing-page
        if: matrix.project == 'landing-page'
